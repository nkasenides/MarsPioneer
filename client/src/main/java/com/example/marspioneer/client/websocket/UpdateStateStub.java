/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Project Editor, v1.0 BETA
-------------------------------------------------------------------------------- */

package com.example.marspioneer.client.websocket;

import com.example.marspioneer.client.MPClient;
import com.example.marspioneer.proto.UpdateStateResponse;
import com.google.protobuf.InvalidProtocolBufferException;
import com.neovisionaries.ws.client.WebSocketException;
import com.raylabz.mocha.binary.client.BinaryWebSocketClient;

import java.io.IOException;

public class UpdateStateStub extends BinaryWebSocketClient {

    private MPClient client;

    public UpdateStateStub(MPClient client) throws IOException, WebSocketException {
        super("ws://localhost:8080/api/state/update");
        this.client = client;
    }

    @Override
    public void onReceive(byte[] bytes) {
        try {
            UpdateStateResponse response = UpdateStateResponse.parseFrom(bytes);
            handleResponse(response);
        } catch (InvalidProtocolBufferException e) {
            e.printStackTrace();
        }
    }
    
    public void handleResponse(UpdateStateResponse response) {
        if (response.getStatus() == UpdateStateResponse.Status.OK) {
            System.out.println("State update received.");

            client.getEntities().clear();
            client.getStateCells().clear();

//            System.out.println("Entities: " + response.getPartialState().getEntitiesMap().size());
            client.getEntities().putAll(response.getPartialState().getEntitiesMap());
//            System.out.println("Cells: " + response.getPartialState().getCellsMap().size());
            client.getStateCells().putAll(response.getPartialState().getCellsMap());

            client.getPlayerResourceSet().setFood(response.getResourceSet().getFood());
            client.getPlayerResourceSet().setSand(response.getResourceSet().getSand());
            client.getPlayerResourceSet().setMetal(response.getResourceSet().getMetal());
            client.getPlayerResourceSet().setWater(response.getResourceSet().getWater());
            client.getGameCanvas().repaint();
        } else {
            System.err.println(response.getMessage());
        }
    }

}

