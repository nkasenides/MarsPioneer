/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Project Editor, v1.0 BETA
-------------------------------------------------------------------------------- */

package com.example.marspioneer.client.stubs;

import com.example.marspioneer.client.MPClient;
import com.example.marspioneer.client.simulation.Bot;
import com.example.marspioneer.client.websocket.*;
import com.neovisionaries.ws.client.WebSocketException;
import java.io.IOException;

public final class Stubs {

    public static final String BASE_URL = "http://localhost:8080";

    public static class Actions {
        private static BuildHubStub buildHubStub = null;
        public static BuildHubStub getBuildHubStub(MPClient client) throws WebSocketException, IOException {
            if (buildHubStub == null) {
                buildHubStub = new BuildHubStub(client);
            }
            return buildHubStub;
        }

        private static SellBuildingStub sellBuildingStub = null;
        public static SellBuildingStub getSellBuildingStub(MPClient client) throws WebSocketException, IOException {
            if (sellBuildingStub == null) {
                sellBuildingStub = new SellBuildingStub(client);
            }
            return sellBuildingStub;
        }

        private static BuildSandPitStub buildSandPitStub = null;
        public static BuildSandPitStub getBuildSandPitStub(MPClient client) throws WebSocketException, IOException {
            if (buildSandPitStub == null) {
                buildSandPitStub = new BuildSandPitStub(client);
            }
            return buildSandPitStub;
        }

        private static BuildMineStub buildMineStub = null;
        public static BuildMineStub getBuildMineStub(MPClient client) throws WebSocketException, IOException {
            if (buildMineStub == null) {
                buildMineStub = new BuildMineStub(client);
            }
            return buildMineStub;
        }

        private static BuildFarmStub buildFarmStub = null;
        public static BuildFarmStub getBuildFarmStub(MPClient client) throws WebSocketException, IOException {
            if (buildFarmStub == null) {
                buildFarmStub = new BuildFarmStub(client);
            }
            return buildFarmStub;
        }

        private static BuildWellStub buildWellStub = null;
        public static BuildWellStub getBuildWellStub(MPClient client) throws WebSocketException, IOException {
            if (buildWellStub == null) {
                buildWellStub = new BuildWellStub(client);
            }
            return buildWellStub;
        }

        //Simulation:
        private static BotBuildHubStub botBuildHubStub = null;
        public static BotBuildHubStub getBotBuildHubStub(Bot bot) throws WebSocketException, IOException {
            if (botBuildHubStub == null) {
                botBuildHubStub = new BotBuildHubStub(bot);
            }
            return botBuildHubStub;
        }

        private static BotSellBuildingStub botSellBuildingStub = null;
        public static BotSellBuildingStub getBotSellBuildingStub(Bot bot) throws WebSocketException, IOException {
            if (botSellBuildingStub == null) {
                botSellBuildingStub = new BotSellBuildingStub(bot);
            }
            return botSellBuildingStub;
        }

        private static BotBuildSandPitStub botBuildSandPitStub = null;
        public static BotBuildSandPitStub getBotBuildSandPitStub(Bot bot) throws WebSocketException, IOException {
            if (botBuildSandPitStub == null) {
                botBuildSandPitStub = new BotBuildSandPitStub(bot);
            }
            return botBuildSandPitStub;
        }

        private static BotBuildMineStub botBuildMineStub = null;
        public static BotBuildMineStub getBotBuildMineStub(Bot bot) throws WebSocketException, IOException {
            if (botBuildMineStub == null) {
                botBuildMineStub = new BotBuildMineStub(bot);
            }
            return botBuildMineStub;
        }

        private static BotBuildFarmStub botBuildFarmStub = null;
        public static BotBuildFarmStub getBotBuildFarmStub(Bot bot) throws WebSocketException, IOException {
            if (botBuildFarmStub == null) {
                botBuildFarmStub = new BotBuildFarmStub(bot);
            }
            return botBuildFarmStub;
        }

        private static BotBuildWellStub botBuildWellStub = null;
        public static BotBuildWellStub getBotBuildWellStub(Bot bot) throws WebSocketException, IOException {
            if (botBuildWellStub == null) {
                botBuildWellStub = new BotBuildWellStub(bot);
            }
            return botBuildWellStub;
        }

    }

    public static ListTeams listTeamsStub() {

        return new ListTeams();
    }
    public static UpdatePlayer updatePlayerStub() {

        return new UpdatePlayer();
    }
    public static GetWorld getWorldStub() {

        return new GetWorld();
    }
    public static UpdateTeam updateTeamStub() {

        return new UpdateTeam();
    }
    public static Subscribe subscribeStub() {

        return new Subscribe();
    }
    public static ListPlayers listPlayersStub() {

        return new ListPlayers();
    }
    public static GetTeam getTeamStub() {

        return new GetTeam();
    }
    public static RemovePlayerFromTeam removePlayerFromTeamStub() {

        return new RemovePlayerFromTeam();
    }
    public static GetBuildingType getBuildingTypeStub() {

        return new GetBuildingType();
    }
    public static Authenticate authenticateStub() {

        return new Authenticate();
    }
    public static UpdateBuildingType updateBuildingTypeStub() {

        return new UpdateBuildingType();
    }
    public static Unsubscribe unsubscribeStub() {

        return new Unsubscribe();
    }
    public static CreateWorld createWorldStub() {

        return new CreateWorld();
    }
    public static DeleteWorld deleteWorldStub() {

        return new DeleteWorld();
    }
    public static ListWorlds listWorldsStub() {

        return new ListWorlds();
    }
    public static UpdateWorld updateWorldStub() {

        return new UpdateWorld();
    }
    public static ListTeamPlayers listTeamPlayersStub() {

        return new ListTeamPlayers();
    }
    public static CreatePlayer createPlayerStub() {

        return new CreatePlayer();
    }
    public static JoinWorld joinWorldStub() {

        return new JoinWorld();
    }
    public static DeAuthenticate deAuthenticateStub() {

        return new DeAuthenticate();
    }
    public static DeletePlayer deletePlayerStub() {

        return new DeletePlayer();
    }
    public static LeaveWorld leaveWorldStub() {

        return new LeaveWorld();
    }
    public static GetPlayer getPlayerStub() {

        return new GetPlayer();
    }
    public static AddPlayerToTeam addPlayerToTeamStub() {

        return new AddPlayerToTeam();
    }
    public static DeleteBuildingType deleteBuildingTypeStub() {

        return new DeleteBuildingType();
    }
    public static ListBuildingTypes listBuildingTypesStub() {

        return new ListBuildingTypes();
    }
    public static CreateTeam createTeamStub() {

        return new CreateTeam();
    }
    public static DeleteTeam deleteTeamStub() {

        return new DeleteTeam();
    }
    public static GetState getStateStub() {

        return new GetState();
    }
    public static CreateBuildingType createBuildingTypeStub() {

        return new CreateBuildingType();
    }
    private static UpdateStateStub updateStateStub = null;
    public static UpdateStateStub getUpdateStateStub(MPClient client) throws WebSocketException, IOException {
        if (updateStateStub == null) {
            updateStateStub = new UpdateStateStub(client);
        }
        return updateStateStub;
    }

    //Simulation:
    private static BotUpdateStateStub botUpdateStateStub = null;
    public static BotUpdateStateStub getBotUpdateStateStub(Bot bot) throws WebSocketException, IOException {
        if (botUpdateStateStub == null) {
            botUpdateStateStub = new BotUpdateStateStub(bot);
        }
        return botUpdateStateStub;
    }


}
