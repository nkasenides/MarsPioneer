/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Project Editor, v1.0 BETA
-------------------------------------------------------------------------------- */

package com.example.marspioneer.service;
import com.example.marspioneer.model.MPPlayer;
import com.example.marspioneer.model.MPWorld;
import com.example.marspioneer.persistence.DBManager;
import com.example.marspioneer.proto.MPWorldProto;
import com.nkasenides.athlos.backend.AthlosService;
import com.example.marspioneer.proto.CreateWorldRequest;
import com.example.marspioneer.auth.*;
import com.example.marspioneer.proto.CreateWorldResponse;

import java.util.ArrayList;

public class CreateWorld implements AthlosService<CreateWorldRequest, CreateWorldResponse> {

    @Override    
    public CreateWorldResponse serve(CreateWorldRequest request, Object... additionalParams) {

        //Verify the game session:
        final MPPlayer player = Auth.verifyGameSessionID(request.getGameSessionID());
        if (player == null) {
            return CreateWorldResponse.newBuilder()
                    .setStatus(CreateWorldResponse.Status.NOT_AUTHORIZED)
                    .setMessage("NOT_AUTHORIZED")
                    .build();
        }

        //Check world information:
        final MPWorld world = request.getWorld().toObject();

        if (world.getName().trim().isEmpty()) {
            return CreateWorldResponse.newBuilder()
                    .setStatus(CreateWorldResponse.Status.INVALID_DATA)
                    .setMessage("INVALID_WORLD_NAME_EMPTY")
                    .build();
        }

        if (world.getName().length() < 2) {
            return CreateWorldResponse.newBuilder()
                    .setStatus(CreateWorldResponse.Status.INVALID_DATA)
                    .setMessage("INVALID_WORLD_NAME_LENGTH")
                    .build();
        }

        final MPWorld dbWorld = DBManager.world.getByName(world.getName());
        if (dbWorld != null) {
            return CreateWorldResponse.newBuilder()
                    .setStatus(CreateWorldResponse.Status.WORLD_EXISTS)
                    .setMessage("INVALID_WORLD_NAME")
                    .build();
        }

        world.setCreatedOn(System.currentTimeMillis());
        world.setChunkIDs(new ArrayList<>());
        world.setOwnerID(player.getId());
        world.setSubscribedSessionIDs(new ArrayList<>());

        //Create the world
        DBManager.world.create(world);
        return CreateWorldResponse.newBuilder()
                .setWorld(world.toProto())
                .setStatus(CreateWorldResponse.Status.OK)
                .setMessage("OK")
                .build();

    }    
    
}

