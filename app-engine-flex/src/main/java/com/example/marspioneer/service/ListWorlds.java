/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Project Editor, v1.0 BETA
-------------------------------------------------------------------------------- */

package com.example.marspioneer.service;
import com.example.marspioneer.model.MPPlayer;
import com.example.marspioneer.model.MPWorld;
import com.example.marspioneer.persistence.DBManager;
import com.example.marspioneer.proto.ListTeamPlayersResponse;
import com.example.marspioneer.proto.MPWorldProto;
import com.nkasenides.athlos.backend.AthlosService;
import com.example.marspioneer.proto.ListWorldsRequest;
import com.example.marspioneer.auth.*;
import com.example.marspioneer.proto.ListWorldsResponse;

import java.util.ArrayList;
import java.util.Collection;

public class ListWorlds implements AthlosService<ListWorldsRequest, ListWorldsResponse> {

    @Override    
    public ListWorldsResponse serve(ListWorldsRequest request, Object... additionalParams) {

        //Verify game session:
        final MPPlayer callingPlayer = Auth.verifyGameSessionID(request.getGameSessionID());
        if (callingPlayer == null) {
            return ListWorldsResponse.newBuilder()
                    .setStatus(ListWorldsResponse.Status.NOT_AUTHORIZED)
                    .setMessage("NOT_AUTHORIZED")
                    .build();
        }

        //Get the worlds:
        final Collection<MPWorld> worlds = DBManager.world.list();
        ArrayList<MPWorldProto> worldProtos = new ArrayList<>();
        for (MPWorld w : worlds) {
            worldProtos.add(w.toProto().build());
        }

        return ListWorldsResponse.newBuilder()
                .setStatus(ListWorldsResponse.Status.OK)
                .addAllWorlds(worldProtos)
                .setMessage("OK")
                .build();

    }    
    
}

