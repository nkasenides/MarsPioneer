/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Project Editor, v1.0 BETA
-------------------------------------------------------------------------------- */

package com.example.marspioneer.service;
import com.example.marspioneer.model.MPPlayer;
import com.example.marspioneer.persistence.DBManager;
import com.example.marspioneer.proto.GetWorldResponse;
import com.example.marspioneer.proto.MPPlayerProto;
import com.nkasenides.athlos.backend.AthlosService;
import com.example.marspioneer.proto.ListTeamPlayersRequest;
import com.example.marspioneer.auth.*;
import com.example.marspioneer.proto.ListTeamPlayersResponse;

import java.util.ArrayList;
import java.util.Collection;

public class ListTeamPlayers implements AthlosService<ListTeamPlayersRequest, ListTeamPlayersResponse> {

    @Override    
    public ListTeamPlayersResponse serve(ListTeamPlayersRequest request, Object... additionalParams) {

        //Verify game session:
        final MPPlayer callingPlayer = Auth.verifyGameSessionID(request.getGameSessionID());
        if (callingPlayer == null) {
            return ListTeamPlayersResponse.newBuilder()
                    .setStatus(ListTeamPlayersResponse.Status.NOT_AUTHORIZED)
                    .setMessage("NOT_AUTHORIZED")
                    .build();
        }

        //Retrieve players:
        final Collection<MPPlayer> players = DBManager.team.listPlayers(request.getTeamID());
        final ArrayList<MPPlayerProto> playerProtos = new ArrayList<>();
        for (MPPlayer p : players) {
            p.setPassword(null);
            playerProtos.add(p.toProto().build());
        }

        return ListTeamPlayersResponse.newBuilder()
                .setStatus(ListTeamPlayersResponse.Status.OK)
                .addAllPlayers(playerProtos)
                .setMessage("OK")
                .build();

    }    
    
}

