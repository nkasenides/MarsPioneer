/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Project Editor, v1.0 BETA
-------------------------------------------------------------------------------- */

package com.example.marspioneer.service;
import com.example.marspioneer.model.BuildingEntity;
import com.example.marspioneer.model.MPEntity;
import com.example.marspioneer.model.MPPlayer;
import com.example.marspioneer.model.MPWorldSession;

import com.example.marspioneer.persistence.DBManager;
import com.example.marspioneer.proto.*;
import com.example.marspioneer.state.State;
import com.nkasenides.athlos.backend.AthlosService;
import com.example.marspioneer.auth.*;
import redis.clients.jedis.Jedis;

import javax.servlet.ServletContext;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.Collection;

public class GetState implements AthlosService<GetStateRequest, GetStateResponse> {

    @Override    
    public GetStateResponse serve(GetStateRequest request, Object... additionalParams) {
        try {

            long t = System.currentTimeMillis();

            //Verify world session:
            final MPPlayer callingPlayer = Auth.verifyWorldSessionID(request.getWorldSessionID());
            if (callingPlayer == null) {
                return GetStateResponse.newBuilder()
                        .setStatus(GetStateResponse.Status.NOT_AUTHORIZED)
                        .setMessage("NOT_AUTHORIZED")
                        .build();
            }
//            System.out.println("Verify world session: " + (System.currentTimeMillis() - t) + "ms");

            t = System.currentTimeMillis();
            //Get the state:
            final MPWorldSession worldSession = DBManager.worldSession.get(request.getWorldSessionID());
            final MPPartialStateProto mpPartialStateProto = State.forWorld(worldSession.getWorldID()).getPartialStateSnapshot(worldSession, worldSession.getCameraPosition(), 20);
//            System.out.println("Retrieve the state: " + (System.currentTimeMillis() - t) + "ms");

            //Response:
            return GetStateResponse.newBuilder()
                    .setStatus(GetStateResponse.Status.OK)
                    .setMessage("OK")
                    .setResourceSet(
                            ResourceSetProto.newBuilder()
                                    .setFood(callingPlayer.getFood())
                                    .setMetal(callingPlayer.getMetal())
                                    .setSand(callingPlayer.getSand())
                                    .setWater(callingPlayer.getWater())
                                    .build()
                    )
                    .setPartialState(mpPartialStateProto)
                    .build();

        } catch (Exception e) {
            e.printStackTrace();
            return GetStateResponse.newBuilder()
                    .setStatus(GetStateResponse.Status.SERVER_ERROR)
                    .setMessage(e.getMessage())
                    .build();
        }
    }    
    
}

