/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Project Editor, v1.0 BETA
-------------------------------------------------------------------------------- */

package com.example.marspioneer.servlet;

import com.example.marspioneer.proto.ListPlayersResponse;
import com.example.marspioneer.service.Services;
import com.nkasenides.athlos.exception.ServiceNotFoundException;
import com.nkasenides.athlos.serverless.servlet.AthlosServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.annotation.WebServlet;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.IOException;

@WebServlet(name = "ListPlayersServlet", urlPatterns = {"/api/player/list"})
public class ListPlayersServlet extends AthlosServlet {

    @Override
    protected byte[] callProcessMethod(HttpServletRequest servletRequest, HttpServletResponse servletResponse, DataInputStream inputStream) throws ServiceNotFoundException, IOException {
        long t = System.currentTimeMillis();
        ByteArrayOutputStream buffer = new ByteArrayOutputStream();
        int nRead;
        byte[] data = new byte[16384];
        while ((nRead = inputStream.read(data, 0, data.length)) != -1) {
            buffer.write(data, 0, nRead);
        }
        final Object[] additionalParameters = {
              servletRequest.getRemoteAddr(),
        };
        System.out.println("Servlet decode time: " + (System.currentTimeMillis() - t));

        t = System.currentTimeMillis();
        final ListPlayersResponse listPlayersResponse = Services.listPlayers(buffer.toByteArray(), additionalParameters);
        System.out.println("Servlet response time: " + (System.currentTimeMillis() - t));

        t = System.currentTimeMillis();
        final byte[] bytes = listPlayersResponse.toByteArray();
        System.out.println("Decode time: " + (System.currentTimeMillis() - t));



        return bytes;
    }

}
