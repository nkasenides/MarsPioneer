/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Project Editor, v1.0 BETA
-------------------------------------------------------------------------------- */

package com.example.marspioneer.model;

import java.io.Serializable;
import java.util.ArrayList;
import com.nkasenides.athlos.proto.Transmittable;
import com.example.marspioneer.proto.*;
import com.nkasenides.athlos.model.*;

public class BuildingType implements Transmittable<BuildingTypeProto.Builder>, Serializable {

    public static final BuildingType HUB = new Builder(EBuildingType.HUB_EBuildingType)
            .setFoodCost(10)
            .setWaterCost(10)
            .setMetalCost(10)
            .setCitizenAddition(50)
            .setAreaOfInterest(4)
            .build();

    public static final BuildingType FARM = new Builder(EBuildingType.FARM_EBuildingType)
            .setWaterCost(5)
            .setFoodCost(5)
            .addPrerequisite(EBuildingType.HUB_EBuildingType)
            .setAreaOfInterest(2)
            .build();

    public static final BuildingType WELL = new Builder(EBuildingType.WELL_EBuildingType)
            .setSandCost(5)
            .setWaterOutput(5)
            .addPrerequisite(EBuildingType.HUB_EBuildingType)
            .setAreaOfInterest(2)
            .build();

    public static final BuildingType SAND_PIT = new Builder(EBuildingType.SAND_PIT_EBuildingType)
            .setWaterCost(5)
            .setSandOutput(5)
            .addPrerequisite(EBuildingType.HUB_EBuildingType)
            .setAreaOfInterest(2)
            .build();

    public static final BuildingType MINE = new Builder(EBuildingType.MINE_EBuildingType)
            .setSandCost(10)
            .setWaterCost(5)
            .setFoodCost(5)
            .setMetalOutput(5)
            .addPrerequisite(EBuildingType.HUB_EBuildingType)
            .setAreaOfInterest(2)
            .build();




    private int waterCost = 0;
    private int metalCost = 0;
    private int waterOutput = 0;
    private ArrayList<EBuildingType> prerequisites = new ArrayList<>();    
    private int areaOfInterest = 1;
    private int sandOutput  = 0;
    private int buildLimit = 0;
    private int foodOutput = 0;
    private EBuildingType type;    
    private int foodCost = 0;
    private int sandCost = 0;
    private int metalOutput = 0;
    private int citizenAddition = 0;

    public BuildingType(int waterCost, int metalCost, int waterOutput, ArrayList<EBuildingType> prerequisites, int areaOfInterest, int sandOutput, int buildLimit, int foodOutput, EBuildingType type, int foodCost, int metalOutput, int citizenAddition, int sandCost) {
        this.waterCost = waterCost;
        this.metalCost = metalCost;
        this.waterOutput = waterOutput;
        this.prerequisites = prerequisites;
        this.areaOfInterest = areaOfInterest;
        this.sandOutput = sandOutput;
        this.buildLimit = buildLimit;
        this.foodOutput = foodOutput;
        this.type = type;
        this.foodCost = foodCost;
        this.metalOutput = metalOutput;
        this.citizenAddition = citizenAddition;
        this.sandCost = sandCost;
    }

    public BuildingType() {
    }

    public int getWaterCost() {
        return waterCost;        
    }    
    
    public int getMetalCost() {    
        return metalCost;        
    }    
    
    public int getWaterOutput() {    
        return waterOutput;        
    }    
    
    public ArrayList<EBuildingType> getPrerequisites() {
        return prerequisites;        
    }    
    
    public int getAreaOfInterest() {    
        return areaOfInterest;        
    }    
    
    public int getSandOutput() {    
        return sandOutput;        
    }    
    
    public int getBuildLimit() {    
        return buildLimit;        
    }    
    
    public int getFoodOutput() {    
        return foodOutput;        
    }    
    
    public EBuildingType getType() {    
        return type;        
    }    
    
    public int getFoodCost() {    
        return foodCost;        
    }    
    
    public int getMetalOutput() {    
        return metalOutput;        
    }    
    
    public int getCitizenAddition() {    
        return citizenAddition;        
    }    
    

    public void setWaterCost(int waterCost) {    
        this.waterCost = waterCost;        
    }    
    
    public void setMetalCost(int metalCost) {    
        this.metalCost = metalCost;        
    }    
    
    public void setWaterOutput(int waterOutput) {    
        this.waterOutput = waterOutput;        
    }    
    
    public void setPrerequisites(ArrayList<EBuildingType> prerequisites) {
        this.prerequisites = prerequisites;        
    }    
    
    public void setAreaOfInterest(int areaOfInterest) {    
        this.areaOfInterest = areaOfInterest;        
    }    
    
    public void setSandOutput(int sandOutput) {    
        this.sandOutput = sandOutput;        
    }    
    
    public void setBuildLimit(int buildLimit) {    
        this.buildLimit = buildLimit;        
    }    
    
    public void setFoodOutput(int foodOutput) {    
        this.foodOutput = foodOutput;        
    }    
    
    public void setType(EBuildingType type) {    
        this.type = type;        
    }    
    
    public void setFoodCost(int foodCost) {    
        this.foodCost = foodCost;        
    }    
    
    public void setMetalOutput(int metalOutput) {    
        this.metalOutput = metalOutput;        
    }    
    
    public void setCitizenAddition(int citizenAddition) {    
        this.citizenAddition = citizenAddition;        
    }

    public int getSandCost() {
        return sandCost;
    }

    public void setSandCost(int sandCost) {
        this.sandCost = sandCost;
    }

    public static class Builder {

        private int waterCost = 0;
        private int metalCost = 0;
        private int waterOutput = 0;
        private final ArrayList<EBuildingType> prerequisites = new ArrayList<>();
        private int areaOfInterest = 1;
        private int sandOutput  = 0;
        private int buildLimit = 0;
        private int foodOutput = 0;
        private final EBuildingType type;
        private int foodCost = 0;
        private int metalOutput = 0;
        private int citizenAddition = 0;
        private int sandCost = 0;

        public Builder(EBuildingType buildingType) {
            this.type = buildingType;
        }

        public Builder setWaterCost(int waterCost) {
            this.waterCost = waterCost;
            return this;
        }

        public Builder setMetalCost(int metalCost) {
            this.metalCost = metalCost;
            return this;
        }

        public Builder setWaterOutput(int waterOutput) {
            this.waterOutput = waterOutput;
            return this;
        }

        public Builder addPrerequisite(EBuildingType prerequisite) {
            this.prerequisites.add(prerequisite);
            return this;
        }

        public Builder setAreaOfInterest(int areaOfInterest) {
            this.areaOfInterest = areaOfInterest;
            return this;
        }

        public Builder setSandOutput(int sandOutput) {
            this.sandOutput = sandOutput;
            return this;
        }

        public Builder setBuildLimit(int buildLimit) {
            this.buildLimit = buildLimit;
            return this;
        }

        public Builder setFoodOutput(int foodOutput) {
            this.foodOutput = foodOutput;
            return this;
        }

        public Builder setFoodCost(int foodCost) {
            this.foodCost = foodCost;
            return this;
        }

        public Builder setMetalOutput(int metalOutput) {
            this.metalOutput = metalOutput;
            return this;
        }

        public Builder setCitizenAddition(int citizenAddition) {
            this.citizenAddition = citizenAddition;
            return this;
        }

        public Builder setSandCost(int sandCost) {
            this.sandCost = sandCost;
            return this;
        }

        public BuildingType build() {
            return new BuildingType(waterCost, metalCost, waterOutput, prerequisites, areaOfInterest, sandOutput, buildLimit, foodOutput, type, foodCost, metalOutput, citizenAddition, sandCost);
        }

    }

    @Override    
    public com.example.marspioneer.proto.BuildingTypeProto.Builder toProto() {    
        com.example.marspioneer.proto.BuildingTypeProto.Builder protoBuilder = com.example.marspioneer.proto.BuildingTypeProto.newBuilder();        
        protoBuilder.setWaterCost(waterCost);        
        protoBuilder.setMetalCost(metalCost);        
        protoBuilder.setWaterOutput(waterOutput);        
        java.util.ArrayList<EBuildingType> prerequisitesList = new java.util.ArrayList<>();        
        for (int i = 0; i < prerequisites.size(); i++) {        
            prerequisitesList.add(prerequisites.get(i));            
        }        
        protoBuilder.addAllPrerequisites(prerequisitesList);        
        protoBuilder.setAreaOfInterest(areaOfInterest);        
        protoBuilder.setSandOutput(sandOutput);        
        protoBuilder.setBuildLimit(buildLimit);        
        protoBuilder.setFoodOutput(foodOutput);        
        protoBuilder.setType(type);        
        protoBuilder.setFoodCost(foodCost);
        protoBuilder.setSandCost(sandCost);
        protoBuilder.setMetalOutput(metalOutput);        
        protoBuilder.setCitizenAddition(citizenAddition);        
        return protoBuilder;        
    }    
    

}
